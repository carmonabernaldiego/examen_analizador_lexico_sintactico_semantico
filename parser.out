Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMMA
    EQUALS_EQUALS

Grammar

Rule 0     S' -> program
Rule 1     program -> include main_function
Rule 2     include -> INCLUDE HEADER
Rule 3     main_function -> INT ID LPAREN RPAREN LBRACE statements RBRACE
Rule 4     statements -> statement statements
Rule 5     statements -> statement
Rule 6     statement -> declaration SEMICOLON
Rule 7     statement -> assignment SEMICOLON
Rule 8     statement -> for_loop
Rule 9     statement -> RETURN expression SEMICOLON
Rule 10    statement -> expression SEMICOLON
Rule 11    declarations -> declaration SEMICOLON declarations
Rule 12    declarations -> declaration SEMICOLON
Rule 13    declaration -> type ID EQUALS expression
Rule 14    declaration -> declaration
Rule 15    type -> INT
Rule 16    for_loop -> FOR LPAREN assignment SEMICOLON condition SEMICOLON increment RPAREN LBRACE statements RBRACE
Rule 17    assignment -> ID EQUALS expression
Rule 18    condition -> ID LEQ NUMBER
Rule 19    increment -> ID INCREMENT
Rule 20    expression -> NUMBER
Rule 21    expression -> ID
Rule 22    expression -> expression PLUS expression
Rule 23    expression -> ID MULT NUMBER

Terminals, with rules where they appear

COMMA                : 
EQUALS               : 13 17
EQUALS_EQUALS        : 
FOR                  : 16
HEADER               : 2
ID                   : 3 13 17 18 19 21 23
INCLUDE              : 2
INCREMENT            : 19
INT                  : 3 15
LBRACE               : 3 16
LEQ                  : 18
LPAREN               : 3 16
MULT                 : 23
NUMBER               : 18 20 23
PLUS                 : 22
RBRACE               : 3 16
RETURN               : 9
RPAREN               : 3 16
SEMICOLON            : 6 7 9 10 11 12 16 16
error                : 

Nonterminals, with rules where they appear

assignment           : 7 16
condition            : 16
declaration          : 6 11 12 14
declarations         : 11
expression           : 9 10 13 17 22 22
for_loop             : 8
include              : 1
increment            : 16
main_function        : 1
program              : 0
statement            : 4 5
statements           : 3 4 16
type                 : 13

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . include main_function
    (2) include -> . INCLUDE HEADER

    INCLUDE         shift and go to state 3

    program                        shift and go to state 1
    include                        shift and go to state 2

state 1

    (0) S' -> program .



state 2

    (1) program -> include . main_function
    (3) main_function -> . INT ID LPAREN RPAREN LBRACE statements RBRACE

    INT             shift and go to state 5

    main_function                  shift and go to state 4

state 3

    (2) include -> INCLUDE . HEADER

    HEADER          shift and go to state 6


state 4

    (1) program -> include main_function .

    $end            reduce using rule 1 (program -> include main_function .)


state 5

    (3) main_function -> INT . ID LPAREN RPAREN LBRACE statements RBRACE

    ID              shift and go to state 7


state 6

    (2) include -> INCLUDE HEADER .

    INT             reduce using rule 2 (include -> INCLUDE HEADER .)


state 7

    (3) main_function -> INT ID . LPAREN RPAREN LBRACE statements RBRACE

    LPAREN          shift and go to state 8


state 8

    (3) main_function -> INT ID LPAREN . RPAREN LBRACE statements RBRACE

    RPAREN          shift and go to state 9


state 9

    (3) main_function -> INT ID LPAREN RPAREN . LBRACE statements RBRACE

    LBRACE          shift and go to state 10


state 10

    (3) main_function -> INT ID LPAREN RPAREN LBRACE . statements RBRACE
    (4) statements -> . statement statements
    (5) statements -> . statement
    (6) statement -> . declaration SEMICOLON
    (7) statement -> . assignment SEMICOLON
    (8) statement -> . for_loop
    (9) statement -> . RETURN expression SEMICOLON
    (10) statement -> . expression SEMICOLON
    (13) declaration -> . type ID EQUALS expression
    (14) declaration -> . declaration
    (17) assignment -> . ID EQUALS expression
    (16) for_loop -> . FOR LPAREN assignment SEMICOLON condition SEMICOLON increment RPAREN LBRACE statements RBRACE
    (20) expression -> . NUMBER
    (21) expression -> . ID
    (22) expression -> . expression PLUS expression
    (23) expression -> . ID MULT NUMBER
    (15) type -> . INT

    RETURN          shift and go to state 18
    ID              shift and go to state 12
    FOR             shift and go to state 21
    NUMBER          shift and go to state 22
    INT             shift and go to state 11

    statements                     shift and go to state 13
    statement                      shift and go to state 14
    declaration                    shift and go to state 15
    assignment                     shift and go to state 16
    for_loop                       shift and go to state 17
    expression                     shift and go to state 19
    type                           shift and go to state 20

state 11

    (15) type -> INT .

    ID              reduce using rule 15 (type -> INT .)


state 12

    (17) assignment -> ID . EQUALS expression
    (21) expression -> ID .
    (23) expression -> ID . MULT NUMBER

    EQUALS          shift and go to state 23
    SEMICOLON       reduce using rule 21 (expression -> ID .)
    PLUS            reduce using rule 21 (expression -> ID .)
    MULT            shift and go to state 24


state 13

    (3) main_function -> INT ID LPAREN RPAREN LBRACE statements . RBRACE

    RBRACE          shift and go to state 25


state 14

    (4) statements -> statement . statements
    (5) statements -> statement .
    (4) statements -> . statement statements
    (5) statements -> . statement
    (6) statement -> . declaration SEMICOLON
    (7) statement -> . assignment SEMICOLON
    (8) statement -> . for_loop
    (9) statement -> . RETURN expression SEMICOLON
    (10) statement -> . expression SEMICOLON
    (13) declaration -> . type ID EQUALS expression
    (14) declaration -> . declaration
    (17) assignment -> . ID EQUALS expression
    (16) for_loop -> . FOR LPAREN assignment SEMICOLON condition SEMICOLON increment RPAREN LBRACE statements RBRACE
    (20) expression -> . NUMBER
    (21) expression -> . ID
    (22) expression -> . expression PLUS expression
    (23) expression -> . ID MULT NUMBER
    (15) type -> . INT

    RBRACE          reduce using rule 5 (statements -> statement .)
    RETURN          shift and go to state 18
    ID              shift and go to state 12
    FOR             shift and go to state 21
    NUMBER          shift and go to state 22
    INT             shift and go to state 11

    statement                      shift and go to state 14
    statements                     shift and go to state 26
    declaration                    shift and go to state 15
    assignment                     shift and go to state 16
    for_loop                       shift and go to state 17
    expression                     shift and go to state 19
    type                           shift and go to state 20

state 15

    (6) statement -> declaration . SEMICOLON
    (14) declaration -> declaration .

  ! shift/reduce conflict for SEMICOLON resolved as shift
    SEMICOLON       shift and go to state 27

  ! SEMICOLON       [ reduce using rule 14 (declaration -> declaration .) ]


state 16

    (7) statement -> assignment . SEMICOLON

    SEMICOLON       shift and go to state 28


state 17

    (8) statement -> for_loop .

    RETURN          reduce using rule 8 (statement -> for_loop .)
    ID              reduce using rule 8 (statement -> for_loop .)
    FOR             reduce using rule 8 (statement -> for_loop .)
    NUMBER          reduce using rule 8 (statement -> for_loop .)
    INT             reduce using rule 8 (statement -> for_loop .)
    RBRACE          reduce using rule 8 (statement -> for_loop .)


state 18

    (9) statement -> RETURN . expression SEMICOLON
    (20) expression -> . NUMBER
    (21) expression -> . ID
    (22) expression -> . expression PLUS expression
    (23) expression -> . ID MULT NUMBER

    NUMBER          shift and go to state 22
    ID              shift and go to state 30

    expression                     shift and go to state 29

state 19

    (10) statement -> expression . SEMICOLON
    (22) expression -> expression . PLUS expression

    SEMICOLON       shift and go to state 31
    PLUS            shift and go to state 32


state 20

    (13) declaration -> type . ID EQUALS expression

    ID              shift and go to state 33


state 21

    (16) for_loop -> FOR . LPAREN assignment SEMICOLON condition SEMICOLON increment RPAREN LBRACE statements RBRACE

    LPAREN          shift and go to state 34


state 22

    (20) expression -> NUMBER .

    SEMICOLON       reduce using rule 20 (expression -> NUMBER .)
    PLUS            reduce using rule 20 (expression -> NUMBER .)


state 23

    (17) assignment -> ID EQUALS . expression
    (20) expression -> . NUMBER
    (21) expression -> . ID
    (22) expression -> . expression PLUS expression
    (23) expression -> . ID MULT NUMBER

    NUMBER          shift and go to state 22
    ID              shift and go to state 30

    expression                     shift and go to state 35

state 24

    (23) expression -> ID MULT . NUMBER

    NUMBER          shift and go to state 36


state 25

    (3) main_function -> INT ID LPAREN RPAREN LBRACE statements RBRACE .

    $end            reduce using rule 3 (main_function -> INT ID LPAREN RPAREN LBRACE statements RBRACE .)


state 26

    (4) statements -> statement statements .

    RBRACE          reduce using rule 4 (statements -> statement statements .)


state 27

    (6) statement -> declaration SEMICOLON .

    RETURN          reduce using rule 6 (statement -> declaration SEMICOLON .)
    ID              reduce using rule 6 (statement -> declaration SEMICOLON .)
    FOR             reduce using rule 6 (statement -> declaration SEMICOLON .)
    NUMBER          reduce using rule 6 (statement -> declaration SEMICOLON .)
    INT             reduce using rule 6 (statement -> declaration SEMICOLON .)
    RBRACE          reduce using rule 6 (statement -> declaration SEMICOLON .)


state 28

    (7) statement -> assignment SEMICOLON .

    RETURN          reduce using rule 7 (statement -> assignment SEMICOLON .)
    ID              reduce using rule 7 (statement -> assignment SEMICOLON .)
    FOR             reduce using rule 7 (statement -> assignment SEMICOLON .)
    NUMBER          reduce using rule 7 (statement -> assignment SEMICOLON .)
    INT             reduce using rule 7 (statement -> assignment SEMICOLON .)
    RBRACE          reduce using rule 7 (statement -> assignment SEMICOLON .)


state 29

    (9) statement -> RETURN expression . SEMICOLON
    (22) expression -> expression . PLUS expression

    SEMICOLON       shift and go to state 37
    PLUS            shift and go to state 32


state 30

    (21) expression -> ID .
    (23) expression -> ID . MULT NUMBER

    SEMICOLON       reduce using rule 21 (expression -> ID .)
    PLUS            reduce using rule 21 (expression -> ID .)
    MULT            shift and go to state 24


state 31

    (10) statement -> expression SEMICOLON .

    RETURN          reduce using rule 10 (statement -> expression SEMICOLON .)
    ID              reduce using rule 10 (statement -> expression SEMICOLON .)
    FOR             reduce using rule 10 (statement -> expression SEMICOLON .)
    NUMBER          reduce using rule 10 (statement -> expression SEMICOLON .)
    INT             reduce using rule 10 (statement -> expression SEMICOLON .)
    RBRACE          reduce using rule 10 (statement -> expression SEMICOLON .)


state 32

    (22) expression -> expression PLUS . expression
    (20) expression -> . NUMBER
    (21) expression -> . ID
    (22) expression -> . expression PLUS expression
    (23) expression -> . ID MULT NUMBER

    NUMBER          shift and go to state 22
    ID              shift and go to state 30

    expression                     shift and go to state 38

state 33

    (13) declaration -> type ID . EQUALS expression

    EQUALS          shift and go to state 39


state 34

    (16) for_loop -> FOR LPAREN . assignment SEMICOLON condition SEMICOLON increment RPAREN LBRACE statements RBRACE
    (17) assignment -> . ID EQUALS expression

    ID              shift and go to state 41

    assignment                     shift and go to state 40

state 35

    (17) assignment -> ID EQUALS expression .
    (22) expression -> expression . PLUS expression

    SEMICOLON       reduce using rule 17 (assignment -> ID EQUALS expression .)
    PLUS            shift and go to state 32


state 36

    (23) expression -> ID MULT NUMBER .

    SEMICOLON       reduce using rule 23 (expression -> ID MULT NUMBER .)
    PLUS            reduce using rule 23 (expression -> ID MULT NUMBER .)


state 37

    (9) statement -> RETURN expression SEMICOLON .

    RETURN          reduce using rule 9 (statement -> RETURN expression SEMICOLON .)
    ID              reduce using rule 9 (statement -> RETURN expression SEMICOLON .)
    FOR             reduce using rule 9 (statement -> RETURN expression SEMICOLON .)
    NUMBER          reduce using rule 9 (statement -> RETURN expression SEMICOLON .)
    INT             reduce using rule 9 (statement -> RETURN expression SEMICOLON .)
    RBRACE          reduce using rule 9 (statement -> RETURN expression SEMICOLON .)


state 38

    (22) expression -> expression PLUS expression .
    (22) expression -> expression . PLUS expression

  ! shift/reduce conflict for PLUS resolved as shift
    SEMICOLON       reduce using rule 22 (expression -> expression PLUS expression .)
    PLUS            shift and go to state 32

  ! PLUS            [ reduce using rule 22 (expression -> expression PLUS expression .) ]


state 39

    (13) declaration -> type ID EQUALS . expression
    (20) expression -> . NUMBER
    (21) expression -> . ID
    (22) expression -> . expression PLUS expression
    (23) expression -> . ID MULT NUMBER

    NUMBER          shift and go to state 22
    ID              shift and go to state 30

    expression                     shift and go to state 42

state 40

    (16) for_loop -> FOR LPAREN assignment . SEMICOLON condition SEMICOLON increment RPAREN LBRACE statements RBRACE

    SEMICOLON       shift and go to state 43


state 41

    (17) assignment -> ID . EQUALS expression

    EQUALS          shift and go to state 23


state 42

    (13) declaration -> type ID EQUALS expression .
    (22) expression -> expression . PLUS expression

    SEMICOLON       reduce using rule 13 (declaration -> type ID EQUALS expression .)
    PLUS            shift and go to state 32


state 43

    (16) for_loop -> FOR LPAREN assignment SEMICOLON . condition SEMICOLON increment RPAREN LBRACE statements RBRACE
    (18) condition -> . ID LEQ NUMBER

    ID              shift and go to state 45

    condition                      shift and go to state 44

state 44

    (16) for_loop -> FOR LPAREN assignment SEMICOLON condition . SEMICOLON increment RPAREN LBRACE statements RBRACE

    SEMICOLON       shift and go to state 46


state 45

    (18) condition -> ID . LEQ NUMBER

    LEQ             shift and go to state 47


state 46

    (16) for_loop -> FOR LPAREN assignment SEMICOLON condition SEMICOLON . increment RPAREN LBRACE statements RBRACE
    (19) increment -> . ID INCREMENT

    ID              shift and go to state 49

    increment                      shift and go to state 48

state 47

    (18) condition -> ID LEQ . NUMBER

    NUMBER          shift and go to state 50


state 48

    (16) for_loop -> FOR LPAREN assignment SEMICOLON condition SEMICOLON increment . RPAREN LBRACE statements RBRACE

    RPAREN          shift and go to state 51


state 49

    (19) increment -> ID . INCREMENT

    INCREMENT       shift and go to state 52


state 50

    (18) condition -> ID LEQ NUMBER .

    SEMICOLON       reduce using rule 18 (condition -> ID LEQ NUMBER .)


state 51

    (16) for_loop -> FOR LPAREN assignment SEMICOLON condition SEMICOLON increment RPAREN . LBRACE statements RBRACE

    LBRACE          shift and go to state 53


state 52

    (19) increment -> ID INCREMENT .

    RPAREN          reduce using rule 19 (increment -> ID INCREMENT .)


state 53

    (16) for_loop -> FOR LPAREN assignment SEMICOLON condition SEMICOLON increment RPAREN LBRACE . statements RBRACE
    (4) statements -> . statement statements
    (5) statements -> . statement
    (6) statement -> . declaration SEMICOLON
    (7) statement -> . assignment SEMICOLON
    (8) statement -> . for_loop
    (9) statement -> . RETURN expression SEMICOLON
    (10) statement -> . expression SEMICOLON
    (13) declaration -> . type ID EQUALS expression
    (14) declaration -> . declaration
    (17) assignment -> . ID EQUALS expression
    (16) for_loop -> . FOR LPAREN assignment SEMICOLON condition SEMICOLON increment RPAREN LBRACE statements RBRACE
    (20) expression -> . NUMBER
    (21) expression -> . ID
    (22) expression -> . expression PLUS expression
    (23) expression -> . ID MULT NUMBER
    (15) type -> . INT

    RETURN          shift and go to state 18
    ID              shift and go to state 12
    FOR             shift and go to state 21
    NUMBER          shift and go to state 22
    INT             shift and go to state 11

    assignment                     shift and go to state 16
    statements                     shift and go to state 54
    statement                      shift and go to state 14
    declaration                    shift and go to state 15
    for_loop                       shift and go to state 17
    expression                     shift and go to state 19
    type                           shift and go to state 20

state 54

    (16) for_loop -> FOR LPAREN assignment SEMICOLON condition SEMICOLON increment RPAREN LBRACE statements . RBRACE

    RBRACE          shift and go to state 55


state 55

    (16) for_loop -> FOR LPAREN assignment SEMICOLON condition SEMICOLON increment RPAREN LBRACE statements RBRACE .

    RETURN          reduce using rule 16 (for_loop -> FOR LPAREN assignment SEMICOLON condition SEMICOLON increment RPAREN LBRACE statements RBRACE .)
    ID              reduce using rule 16 (for_loop -> FOR LPAREN assignment SEMICOLON condition SEMICOLON increment RPAREN LBRACE statements RBRACE .)
    FOR             reduce using rule 16 (for_loop -> FOR LPAREN assignment SEMICOLON condition SEMICOLON increment RPAREN LBRACE statements RBRACE .)
    NUMBER          reduce using rule 16 (for_loop -> FOR LPAREN assignment SEMICOLON condition SEMICOLON increment RPAREN LBRACE statements RBRACE .)
    INT             reduce using rule 16 (for_loop -> FOR LPAREN assignment SEMICOLON condition SEMICOLON increment RPAREN LBRACE statements RBRACE .)
    RBRACE          reduce using rule 16 (for_loop -> FOR LPAREN assignment SEMICOLON condition SEMICOLON increment RPAREN LBRACE statements RBRACE .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for SEMICOLON in state 15 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 38 resolved as shift
